plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

subprojects {
    group = 'com.codetest'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }

    group = 'com.codetest'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    ext {
        set('mapstructVersion', "1.5.5.Final")
        set('webmvcVersion', "2.5.0")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${webmvcVersion}"

        // Jakarta EE
        implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // for mapper
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        // h2 Database
        runtimeOnly 'com.h2database:h2'

        // queryDSL
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        // for test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(':task-common') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
    }
}


project(':task-external') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':task-common')
        compileOnly project(':task-common')
    }
}


project(':task-back') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':task-common')
        compileOnly project(':task-common')
    }
}